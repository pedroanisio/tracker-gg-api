#!/usr/bin/env python3
"""
Environment setup script for Valorant Tracker API.
Helps users create and configure their .env file.
"""

import os
import sys
from pathlib import Path

def create_env_file():
    """Create a .env file with proper configuration."""
    
    # Find project root (where this script is run from)
    current_dir = Path.cwd()
    env_file = current_dir / ".env"
    
    print("üîß Valorant Tracker API - Environment Setup")
    print("=" * 50)
    
    # Check if .env file already exists
    if env_file.exists():
        print(f"‚ö†Ô∏è  .env file already exists at: {env_file}")
        overwrite = input("Do you want to overwrite it? (y/N): ").lower().strip()
        if overwrite != 'y':
            print("‚ùå Setup cancelled.")
            return False
    
    print("\nüìù Setting up your environment variables...")
    
    # Get Anthropic API key
    print("\n1. Anthropic API Key")
    print("   Visit: https://console.anthropic.com/")
    print("   Create an account and generate an API key")
    
    api_key = input("\nEnter your Anthropic API key: ").strip()
    
    if not api_key:
        print("‚ùå API key is required!")
        return False
    
    if not api_key.startswith("sk-ant-"):
        print("‚ö†Ô∏è  Warning: API key doesn't look like a valid Anthropic key")
        proceed = input("Continue anyway? (y/N): ").lower().strip()
        if proceed != 'y':
            return False
    
    # Optional database URL
    print("\n2. Database Configuration (Optional)")
    print("   Default: postgresql://user:password@localhost:5432/valorant_tracker")
    
    db_url = input("Enter custom DATABASE_URL (or press Enter for default): ").strip()
    
    # Optional FlareSolverr URL
    print("\n3. FlareSolverr Configuration (Optional)")
    print("   Default: http://localhost:8191")
    
    flaresolverr_url = input("Enter custom FLARESOLVERR_URL (or press Enter for default): ").strip()
    
    # Create .env content
    env_content = f"""# Valorant Tracker API Configuration
# Generated by setup script

# Required: Anthropic API Key for AI agent
ANTHROPIC_API_KEY={api_key}

# Optional: Database configuration
"""
    
    if db_url:
        env_content += f"DATABASE_URL={db_url}\n"
    else:
        env_content += "# DATABASE_URL=postgresql://user:password@localhost:5432/valorant_tracker\n"
    
    env_content += "\n# Optional: FlareSolverr configuration\n"
    if flaresolverr_url:
        env_content += f"FLARESOLVERR_URL={flaresolverr_url}\n"
    else:
        env_content += "# FLARESOLVERR_URL=http://localhost:8191\n"
    
    env_content += """
# Optional: AI Configuration
# CLAUDE_MODEL=claude-3-5-sonnet-20241022
# MAX_TOKENS=2048
# TEMPERATURE=0.7

# Optional: Proxy configuration for enhanced scraper
# USE_PROXY_ROTATION=false
# PROXY_LIST=http://proxy1:port,http://proxy2:port
"""
    
    # Write .env file
    try:
        with open(env_file, 'w') as f:
            f.write(env_content)
        
        print(f"\n‚úÖ .env file created successfully at: {env_file}")
        print("\nüîí Security Note:")
        print("   - Never commit the .env file to version control")
        print("   - The .env file contains sensitive information")
        print("   - Make sure .env is in your .gitignore file")
        
        # Check if .gitignore exists and contains .env
        gitignore_file = current_dir / ".gitignore"
        if gitignore_file.exists():
            with open(gitignore_file, 'r') as f:
                gitignore_content = f.read()
            
            if '.env' not in gitignore_content:
                print("\n‚ö†Ô∏è  Warning: .env is not in .gitignore")
                add_gitignore = input("Add .env to .gitignore? (Y/n): ").lower().strip()
                if add_gitignore != 'n':
                    with open(gitignore_file, 'a') as f:
                        f.write("\n# Environment variables\n.env\n")
                    print("‚úÖ Added .env to .gitignore")
        
        print("\nüöÄ Next Steps:")
        print("   1. Install dependencies: pip install -r requirements.txt")
        print("   2. Start the application: uvicorn src.expose.api:app --reload")
        print("   3. Open http://localhost:8000/dashboard")
        print("   4. Test the AI chat functionality")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error creating .env file: {e}")
        return False

def main():
    """Main setup function."""
    print("Starting environment setup...")
    
    if create_env_file():
        print("\nüéâ Setup completed successfully!")
        sys.exit(0)
    else:
        print("\nüí• Setup failed!")
        sys.exit(1)

if __name__ == "__main__":
    main() 